{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\snmed\\\\proyectos\\\\defi-staking\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\snmed\\\\proyectos\\\\defi-staking\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\snmed\\\\proyectos\\\\defi-staking\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\snmed\\\\proyectos\\\\defi-staking\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\snmed\\\\proyectos\\\\defi-staking\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\snmed\\\\proyectos\\\\defi-staking\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\snmed\\\\proyectos\\\\defi-staking\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\snmed\\\\proyectos\\\\defi-staking\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './Navbar.js';\nimport Main from './Main.js';\nimport Web3 from 'web3';\nimport Tether from '../abis/Tether.json';\nimport RWD from '../abis/RWD.json';\nimport DecentralBank from '../abis/DecentralBank.json';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function () {\n      var _UNSAFE_componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function UNSAFE_componentWillMount() {\n        return _UNSAFE_componentWillMount.apply(this, arguments);\n      }\n\n      return UNSAFE_componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('No ethereum browser detected. You can check out Metamask');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, account, networkId, tetherData, tether, tetherBalance, rwdData, rwd, rwdBalance, decentralBankData, decentralBank, stakingBalance;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                account = _context3.sent;\n                this.setState({\n                  account: account[0]\n                });\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                //load thether contract \n                tetherData = Tether.networks[networkId];\n\n                if (!tetherData) {\n                  _context3.next = 19;\n                  break;\n                }\n\n                tether = new web3.eth.Contract(Tether.abi, tetherData.address);\n                this.setState({\n                  tether: tether\n                });\n                _context3.next = 14;\n                return tether.methods.balanceOf(this.state.account).call();\n\n              case 14:\n                tetherBalance = _context3.sent;\n                this.setState({\n                  tetherBalance: tetherBalance.toString()\n                });\n                console.log({\n                  tetherBalance: tetherBalance\n                });\n                _context3.next = 20;\n                break;\n\n              case 19:\n                window.alert('ERROR. Tether contract not deployed to detected network');\n\n              case 20:\n                //Load RWD contract\n                rwdData = RWD.networks[networkId];\n\n                if (!rwdData) {\n                  _context3.next = 31;\n                  break;\n                }\n\n                rwd = new web3.eth.Contract(RWD.abi, rwdData.address);\n                this.setState({\n                  rwd: rwd\n                });\n                _context3.next = 26;\n                return rwd.methods.balanceOf(this.state.account).call();\n\n              case 26:\n                rwdBalance = _context3.sent;\n                this.setState({\n                  rwdBalance: rwdBalance.toString()\n                });\n                console.log({\n                  rwdBalance: rwdBalance\n                });\n                _context3.next = 32;\n                break;\n\n              case 31:\n                window.alert('ERROR. RWD contract not deployed to detected network');\n\n              case 32:\n                //Load Decentral Bank Data\n                decentralBankData = DecentralBank.networks[networkId];\n\n                if (!decentralBankData) {\n                  _context3.next = 43;\n                  break;\n                }\n\n                decentralBank = new web3.eth.Contract(DecentralBank.abi, decentralBankData.address);\n                this.setState({\n                  decentralBank: decentralBank\n                });\n                _context3.next = 38;\n                return decentralBank.methods.stakingBalance(this.state.account).call();\n\n              case 38:\n                stakingBalance = _context3.sent;\n                this.setState({\n                  stakingBalance: stakingBalance.toString()\n                });\n                console.log({\n                  stakingBalance: stakingBalance\n                });\n                _context3.next = 44;\n                break;\n\n              case 43:\n                window.alert('ERROR. DecentralBank contract not deployed to detected network');\n\n              case 44:\n                this.setState({\n                  loading: false\n                });\n\n              case 45:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: '0x0',\n      tether: {},\n      rwd: {},\n      decentralBank: {},\n      tetherBalance: '0',\n      rwdBalance: '0',\n      stakingBalance: '0',\n      loading: false\n    };\n    return _this;\n  } //react code goes here\n\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 6\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 ml-auto mr-auto\",\n        style: {\n          maxWidth: '600px',\n          minHeight: '100vm'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 8\n        }\n      })), /*#__PURE__*/React.createElement(Main, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 7\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/snmed/proyectos/defi-staking/src/components/App.js"],"names":["React","Component","Navbar","Main","Web3","Tether","RWD","DecentralBank","App","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","account","setState","net","getId","networkId","tetherData","networks","tether","Contract","abi","address","methods","balanceOf","state","call","tetherBalance","toString","console","log","rwdData","rwd","rwdBalance","decentralBankData","decentralBank","stakingBalance","loading","props","maxWidth","minHeight"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Navbar from './Navbar.js';\r\nimport Main from './Main.js'\r\nimport Web3 from 'web3';\r\nimport Tether from '../abis/Tether.json'\r\nimport RWD from '../abis/RWD.json'\r\nimport DecentralBank from '../abis/DecentralBank.json'\r\n\r\nclass App extends Component {\r\n\r\n\tasync UNSAFE_componentWillMount(){\r\n\t\tawait this.loadWeb3()\r\n\t\tawait this.loadBlockchainData()\r\n\t}\r\n\r\n\tasync loadWeb3(){\r\n\t\tif(window.ethereum){\r\n\t\t\twindow.web3 = new Web3(window.ethereum)\r\n\t\t\tawait window.ethereum.enable()\r\n\t\t} else if (window.web3){\r\n\t\t\t\twindow.web3 = new Web3(window.web3.currentProvider)\r\n\t\t} else {\r\n\t\t\twindow.alert('No ethereum browser detected. You can check out Metamask')\r\n\t\t}\r\n\t}\r\n\r\n\tasync loadBlockchainData(){\r\n\t\tconst web3 = window.web3\r\n\t\tconst account = await web3.eth.getAccounts()\r\n\t\tthis.setState({account: account[0]})\r\n\t\tconst networkId = await web3.eth.net.getId()\r\n\r\n\t\t//load thether contract \r\n\t\tconst tetherData = Tether.networks[networkId]\r\n\t\tif(tetherData) {\r\n\t\t\tconst tether = new web3.eth.Contract(Tether.abi, tetherData.address)\r\n\t\t\tthis.setState({tether})\r\n\t\t\tlet tetherBalance = await tether.methods.balanceOf(this.state.account).call()\r\n\t\t\tthis.setState({tetherBalance: tetherBalance.toString() })\r\n\t\t\tconsole.log({tetherBalance})\r\n\t\t} else {\r\n\t\t\twindow.alert('ERROR. Tether contract not deployed to detected network')\r\n\t\t}\r\n\t\t//Load RWD contract\r\n\t\tconst rwdData = RWD.networks[networkId]\r\n\t\tif(rwdData) {\r\n\t\t\tconst rwd = new web3.eth.Contract(RWD.abi, rwdData.address)\r\n\t\t\tthis.setState({rwd})\r\n\t\t\tlet rwdBalance = await rwd.methods.balanceOf(this.state.account).call()\r\n\t\t\tthis.setState({rwdBalance: rwdBalance.toString() })\r\n\t\t\tconsole.log({rwdBalance})\r\n\t\t} else {\r\n\t\t\twindow.alert('ERROR. RWD contract not deployed to detected network')\r\n\t\t}\r\n\t\t//Load Decentral Bank Data\r\n\t\tconst decentralBankData = DecentralBank.networks[networkId]\r\n\t\tif(decentralBankData) {\r\n\t\t\tconst decentralBank = new web3.eth.Contract(DecentralBank.abi, decentralBankData.address)\r\n\t\t\tthis.setState({decentralBank})\r\n\t\t\tlet stakingBalance = await decentralBank.methods.stakingBalance(this.state.account).call()\r\n\t\t\tthis.setState({stakingBalance: stakingBalance.toString()})\r\n\t\t\tconsole.log({stakingBalance})\r\n\t\t} else {\r\n\t\t\twindow.alert('ERROR. DecentralBank contract not deployed to detected network')\r\n\t\t}\r\n\r\n\t\tthis.setState({loading: false})\r\n\t}\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\taccount: '0x0',\r\n\t\t\ttether:{},\r\n\t\t\trwd: {},\r\n\t\t\tdecentralBank: {},\r\n\t\t\ttetherBalance: '0',\r\n\t\t\trwdBalance: '0',\r\n\t\t\tstakingBalance: '0',\r\n\t\t\tloading: false\r\n\t\t}\r\n\t}\r\n\r\n\t//react code goes here\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Navbar account={this.state.account}/>\r\n\r\n\t\t\t\t\t<div className='container-fluid mt-5'>\r\n\t\t\t\t\t\t<div className='row'>\r\n\t\t\t\t\t\t\t<main role='main' className='col-lg-12 ml-auto mr-auto' style={{maxWidth:'600px', minHeight: '100vm'}}>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</main>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<Main />\r\n\t\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}